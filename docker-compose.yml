services:

  mariadb_keycloak:
    image: mariadb:latest
    environment:
      MARIADB_ROOT_PASSWORD: rootpass
      MARIADB_DATABASE: keycloak
      MARIADB_USER: keycloak
      MARIADB_PASSWORD: keycloakpass
    restart: unless-stopped
    volumes:
      - data_keycloak:/var/lib/mysql:rw
    networks:
      - app-network

  mariadb_api:
    image: mariadb:latest
    environment:
      MARIADB_ROOT_PASSWORD: rootpass
      MARIADB_DATABASE: api_db
      MARIADB_USER: apiuser
      MARIADB_PASSWORD: apipass
    restart: unless-stopped
    volumes:
      - './KC_DB/data_api:/var/lib/mysql:rw'
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mariadb
      KC_DB_SCHEMA: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpass
      KC_DB_URL_HOST: mariadb_keycloak
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - mariadb_keycloak
    networks:
      - app-network

  backend_clients:
    build: ./app/clients
    volumes:
      - ./logs:/logs
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mariadb_api

  backend_orders:
    build: ./app/orders
    volumes:
      - ./logs:/logs
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mariadb_api

  backend_product:
    build: ./app/product
    volumes:
      - ./logs:/logs
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mariadb_api

networks:
  app-network:
    driver: bridge

volumes:
  data_keycloak: