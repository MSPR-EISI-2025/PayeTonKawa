services:
  backend_clients:
    build: ./app/clients
    networks:
      - app-network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.clients.rule=Host(`${CLIENTS_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.clients.entrypoints=websecure"
      - "traefik.http.routers.clients.tls=true"
      - "traefik.http.routers.clients.tls.certresolver=myresolver"
      - "traefik.http.services.clients.loadbalancer.server.port=3000"

  backend_orders:
    build: ./app/orders
    networks:
      - app-network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orders.rule=Host(`${ORDERS_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.orders.entrypoints=websecure"
      - "traefik.http.routers.orders.tls=true"
      - "traefik.http.routers.orders.tls.certresolver=myresolver"
      - "traefik.http.services.orders.loadbalancer.server.port=3000"

  backend_product:
    build: ./app/product
    networks:
      - app-network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.products.rule=Host(`${PRODUCTS_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.products.entrypoints=websecure"
      - "traefik.http.routers.products.tls=true"
      - "traefik.http.routers.products.tls.certresolver=myresolver"
      - "traefik.http.services.products.loadbalancer.server.port=3000"

  keycloak:
    networks:
      - app-network
      - traefik
    labels:
      - "traefik.enable=true"

      # HTTPS router
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.tls.certresolver=myresolver"

      # Service -> point to Keycloak's internal port
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
networks:
  app-network:
    driver: bridge
  traefik:
    external: true
