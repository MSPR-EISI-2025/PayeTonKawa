# Fichier : Makefile

# Charger le fichier .env
include .env
export $(shell sed 's/=.*//' .env)

SQL_TEMPLATE=./mock_mariaDB/init/setup-users.sql.template
SQL_OUTPUT=./mock_mariaDB/init/setup-users.sql

.PHONY: all init-sql up importer down clean

# Par dÃ©faut : initialise le SQL puis lance tous les services
all: init-sql up

# Injecte les variables dans le fichier SQL
init-sql:
	@echo "ğŸ“„ GÃ©nÃ©ration du script SQL Ã  partir du template..."
	cat $(SQL_TEMPLATE) | \
		CLIENTS_DB_USER=$(CLIENTS_DB_USER) CLIENTS_DB_PASS=$(CLIENTS_DB_PASS) \
		ORDERS_DB_USER=$(ORDERS_DB_USER)   ORDERS_DB_PASS=$(ORDERS_DB_PASS) \
		PRODUCTS_DB_USER=$(PRODUCTS_DB_USER) PRODUCTS_DB_PASS=$(PRODUCTS_DB_PASS) \
		envsubst '$$CLIENTS_DB_USER $$CLIENTS_DB_PASS $$ORDERS_DB_USER $$ORDERS_DB_PASS $$PRODUCTS_DB_USER $$PRODUCTS_DB_PASS' \
		> $(SQL_OUTPUT)
	@echo "âœ… Fichier gÃ©nÃ©rÃ© : $(SQL_OUTPUT)"

# Lance tous les services (par dÃ©faut)
up:
	@echo "ğŸš€ DÃ©marrage des services..."
	docker compose up -d

# Lance seulement les services du profil 'importer'
importer:
	@echo "ğŸš€ Lancement des services du profil importer..."
	docker compose --profile importer up

# Stoppe les containers
down:
	@echo "ğŸ›‘ ArrÃªt des containers..."
	docker compose down

# Supprime les fichiers gÃ©nÃ©rÃ©s
clean:
	@echo "ğŸ§¹ Nettoyage..."
	rm -f $(SQL_OUTPUT)
